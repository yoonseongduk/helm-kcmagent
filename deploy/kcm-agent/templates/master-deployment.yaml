apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.master.name}}
  namespace: {{.Release.Namespace}}
  labels:
    app.kubernetes.io/name: {{.Values.master.name}}
    helm.sh/chart: {{ printf "%s-%s" .Chart.Name .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{.Values.master.name}}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{.Values.master.name}}
        helm.sh/chart: {{ printf "%s-%s" .Chart.Name .Chart.Version }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/part-of: {{ .Chart.Name }}
    spec:
      automountServiceAccountToken: true
      serviceAccountName: {{.Values.master.name}}
      imagePullSecrets:
        - name: secret-nkia-repo
      containers:
        - image: {{.Values.image}}
          imagePullPolicy: {{.Values.pullPolicy}}
          name: {{.Values.master.name}}
          command: [ "/bin/kcm-agent" ]
          args: [ "master" ]
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
            - secretRef:
                name: {{.Release.Name}}-secret
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: HEALTH_CHECK_PORT
              value: "{{.Values.master.healthCheckPort}}"
          ports:
            - containerPort: {{.Values.master.port}}
              name: nats
            - containerPort: {{.Values.master.healthCheckPort}}
              name: health-check
          resources:
            requests:
                cpu: {{.Values.master.resources.requests.cpu}}
                memory: {{.Values.master.resources.requests.memory}}
            limits:
                cpu: {{.Values.master.resources.limits.cpu}}
                memory: {{.Values.master.resources.limits.memory}}



